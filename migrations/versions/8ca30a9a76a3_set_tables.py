"""Set Tables

Revision ID: 8ca30a9a76a3
Revises: 
Create Date: 2020-07-15 17:56:05.991470

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8ca30a9a76a3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('database_knowledge',
    sa.Column('database_knowledge_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('database_knowledge_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('database_knowledge_id')
    )
    op.create_table('experience',
    sa.Column('experience_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('experience_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('experience_id')
    )
    op.create_table('fav_database_system',
    sa.Column('fav_database_system_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fav_database_system_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('fav_database_system_id')
    )
    op.create_table('fav_programming_lang',
    sa.Column('fav_lang_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fav_lang_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('fav_lang_id')
    )
    op.create_table('field_interest',
    sa.Column('field_interest_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('field_interest_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('field_interest_id')
    )
    op.create_table('programmer_type',
    sa.Column('programmer_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('programmer_type_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('programmer_type_id')
    )
    op.create_table('second_fav_lang',
    sa.Column('fav_lang_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fav_lang_name', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('fav_lang_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.String(length=100), nullable=False),
    sa.Column('lastname', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.String(length=100), nullable=False),
    sa.Column('image_file', sa.String(length=20), nullable=True),
    sa.Column('last_message_read_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('interests',
    sa.Column('interest_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('fav_programming_lang_id', sa.Integer(), nullable=False),
    sa.Column('second_fav_lang_id', sa.Integer(), nullable=False),
    sa.Column('database_knowledge_id', sa.Integer(), nullable=False),
    sa.Column('fav_database_system_id', sa.Integer(), nullable=False),
    sa.Column('field_interest_id', sa.Integer(), nullable=False),
    sa.Column('programmer_type_id', sa.Integer(), nullable=False),
    sa.Column('experience_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['database_knowledge_id'], ['database_knowledge.database_knowledge_id'], ),
    sa.ForeignKeyConstraint(['experience_id'], ['experience.experience_id'], ),
    sa.ForeignKeyConstraint(['fav_database_system_id'], ['fav_database_system.fav_database_system_id'], ),
    sa.ForeignKeyConstraint(['fav_programming_lang_id'], ['fav_programming_lang.fav_lang_id'], ),
    sa.ForeignKeyConstraint(['field_interest_id'], ['field_interest.field_interest_id'], ),
    sa.ForeignKeyConstraint(['programmer_type_id'], ['programmer_type.programmer_type_id'], ),
    sa.ForeignKeyConstraint(['second_fav_lang_id'], ['second_fav_lang.fav_lang_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('interest_id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.String(length=140), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_timestamp'), 'messages', ['timestamp'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.Float(), nullable=True),
    sa.Column('payload_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_name'), 'notification', ['name'], unique=False)
    op.create_index(op.f('ix_notification_timestamp'), 'notification', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notification_timestamp'), table_name='notification')
    op.drop_index(op.f('ix_notification_name'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_messages_timestamp'), table_name='messages')
    op.drop_table('messages')
    op.drop_table('interests')
    op.drop_table('users')
    op.drop_table('second_fav_lang')
    op.drop_table('programmer_type')
    op.drop_table('field_interest')
    op.drop_table('fav_programming_lang')
    op.drop_table('fav_database_system')
    op.drop_table('experience')
    op.drop_table('database_knowledge')
    # ### end Alembic commands ###
